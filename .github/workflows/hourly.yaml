name: update NHC storm data

on:
  schedule:
    # Run every hour
    - cron: "20 * * * *"

permissions: write-all

jobs:
  update:
    name: Update NHC Atlantic storm data
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/checkout@v4

      - name: install dependencies
        run: npm install

      - name: do the update
        env:
          MASTODON_SERVER_URL: ${{ secrets.MASTODON_SERVER_URL }}
          MASTODON_API_TOKEN: ${{ secrets.MASTODON_API_TOKEN }}
        run: npm run update

      - name: commit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./.github/workflows/git.sh

      - name: cleanup old runs
        uses: actions/github-script@v6
        with:
          script: |
            const runs = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const doneStates = new Set([
              "completed",
              "cancelled",
              "failure",
              "neutral",
              "skipped",
              "stale",
              "success",
              "timed_out",
            ]);

            for await(const run of runs.data.workflow_runs) {
              if(run.id !== context.runId && doneStates.has(run.status)) {
                console.log(`Deleting run #${run.run_number} (${run.id})`);
                await github.rest.actions.deleteWorkflowRun({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  run_id: run.id
                });
              }
            }
